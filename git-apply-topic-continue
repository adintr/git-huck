#!/bin/bash

project_dir=`git rev-parse --show-toplevel`
atpfile="$project_dir/.git/apply_topic_commits"
pikfile="$project_dir/.git/CHERRY_PICK_HEAD"

if [ -f "$pikfile" ]
then
    git cherry-pick --continue
    if [ $? -ne 0 ]
    then
        exit $?
    fi
fi

if [ ! -f "$atpfile" ]
then
    echo "nothing to do." >&2
    exit 1
fi

function commit_msg {
  git log --pretty=format:"%s" $1^..$1
}

function pickcommit {
    branch=`echo $1 | awk '{ print $1 }'`
    commit=`echo $1 | awk '{ print $2 }'`

    echo "try apply $commit to $branch ..."
    current_branch=`git branch --no-color 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    while [ $current_branch != $branch ]
    do
        git checkout $branch
	checkres=$?
	if [ $checkres -ne 0 ]
	then
	    return 5
	fi
	current_branch=`git branch --no-color 2>/dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
    done

    commitmsg=`commit_msg $commit`
    likelycommits=`git log --pretty=format:"%H" --grep "$commitmsg"`

    for likelycmt in $likelycommits
    do
        if [ $likelycmt == $commit ]
	then
	    echo "$commit is already exist in $branch, skiped."
	    return 0
	fi

	chage1=`git log --pretty=format:"" -p $likelycmt^..$likelycmt | sed '/^index /d' | md5sum`
	chage2=`git log --pretty=format:"" -p $commit^..$commit | sed '/^index /d' | md5sum`

	if [ $chage1 == $chage2 ]
	then
	    echo "diff of $commit is same as $likelycmt, skiped."
	    return 0
	fi

        read -p "$commit is like $likelycmt, is this commit should skip? (Yes/No): "  isSkip
	if [ $isSkip == "Yes" ]
	    echo "skiped $commit ..."
	    return 0
	fi
    done

    git cherry-pick --ff $commit
}

topic_branch=`head -1 "$atpfile"`
commits=`sed '1d' "$atpfile"`
rm "$atpfile"
IFSOLD=$IFS
IFS=$'\n'

is_error=0

for lcommit in $commits
do
    if [ $is_error -ne 0 ]
    then
        echo "$lcommit" >&3
    else
        pickcommit $lcommit
	pickres=$?
	if [ $pickres -ne 0 ]
	then
	    is_error=1
	    exec 3>$atpfile
	    echo "$topic_branch" >&3
	fi
	if [ $pickres -eq 5 ]
	then
	    echo "$lcommit" >&3
	fi
    fi
done

IFS=$IFSOLD

git config huck.lastapply.$topic_branch $commit
git checkout $topic_branch
